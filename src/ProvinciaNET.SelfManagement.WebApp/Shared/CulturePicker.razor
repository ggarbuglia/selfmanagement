@using System.Globalization;

@inject NavigationManager NavigationManager
@inject IStringLocalizer<LocalizationResource> L

<RadzenDropDown @bind-Value="@culture" Change="@ChangeCulture" TValue="string" TextProperty="Text" ValueProperty="Value"
                Data="@(new [] { new { Text = @L["English"], Value = "en" }, new { Text = @L["Spanish"], Value = "es" } })" />

@code {
    protected string? culture;

    protected override void OnInitialized()
    {
        culture = CultureInfo.CurrentCulture.Name;
    }

    protected void ChangeCulture()
    {
        if (NavigationManager == null || culture == null) return;

        var redirect = new Uri(uriString: NavigationManager.Uri).GetComponents(UriComponents.PathAndQuery | UriComponents.Fragment, UriFormat.UriEscaped);
        var query = $"?culture={Uri.EscapeDataString(culture)}&redirectUri={redirect}";
        NavigationManager.NavigateTo("culture/setculture" + query, forceLoad: true);
    }
}