// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProvinciaNET.SelfManagement.Infraestructure.Data;

#nullable disable

namespace ProvinciaNET.SelfManagement.Infraestructure.Migrations
{
    [DbContext(typeof(SelfManagementContext))]
    [Migration("20230505142002_OrganizationTables")]
    partial class OrganizationTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProvinciaNET.SelfManagement.Core.Entities.AdUserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .IsConcurrencyToken()
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("GivenName")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("MembershipId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsConcurrencyToken()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ModifiedOn")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2");

                    b.Property<string>("SamAccountName")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SurName")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserPrincipalName")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("MembershipId");

                    b.ToTable("AdUserAccounts", "dbo");
                });

            modelBuilder.Entity("ProvinciaNET.SelfManagement.Core.Entities.AdUserAccountProvision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .IsConcurrencyToken()
                        .HasColumnType("bit");

                    b.Property<int>("AdUserAccountId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2");

                    b.Property<string>("Error")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("HasError")
                        .IsConcurrencyToken()
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsConcurrencyToken()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ModifiedOn")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AdUserAccountId");

                    b.ToTable("AdUserAccountProvisions", "dbo");
                });

            modelBuilder.Entity("ProvinciaNET.SelfManagement.Core.Entities.OrgCostCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .IsConcurrencyToken()
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsConcurrencyToken()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ModifiedOn")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("OrgCostCenters", "dbo");
                });

            modelBuilder.Entity("ProvinciaNET.SelfManagement.Core.Entities.OrgDirection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .IsConcurrencyToken()
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsConcurrencyToken()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ModifiedOn")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("OrgDirections", "dbo");
                });

            modelBuilder.Entity("ProvinciaNET.SelfManagement.Core.Entities.OrgLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .IsConcurrencyToken()
                        .HasColumnType("bit");

                    b.Property<string>("AdGroupAccountName")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AdGroupDisplayName")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Address")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("City")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CreatedBy")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsConcurrencyToken()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ModifiedOn")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PostalCode")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("OrgLocations", "dbo");
                });

            modelBuilder.Entity("ProvinciaNET.SelfManagement.Core.Entities.OrgMailDatabaseGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .IsConcurrencyToken()
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsConcurrencyToken()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ModifiedOn")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("OrgMailDatabaseGroups", "dbo");
                });

            modelBuilder.Entity("ProvinciaNET.SelfManagement.Core.Entities.OrgMembership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .IsConcurrencyToken()
                        .HasColumnType("bit");

                    b.Property<string>("AdGroupAccountName")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AdGroupDisplayName")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CreatedBy")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsConcurrencyToken()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ModifiedOn")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2");

                    b.Property<bool>("Show")
                        .IsConcurrencyToken()
                        .HasColumnType("bit");

                    b.Property<int>("StructureId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StructureId");

                    b.ToTable("OrgMemberships", "dbo");
                });

            modelBuilder.Entity("ProvinciaNET.SelfManagement.Core.Entities.OrgSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .IsConcurrencyToken()
                        .HasColumnType("bit");

                    b.Property<int>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2");

                    b.Property<int>("DirectionId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsConcurrencyToken()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ModifiedOn")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("DirectionId");

                    b.ToTable("OrgSections", "dbo");
                });

            modelBuilder.Entity("ProvinciaNET.SelfManagement.Core.Entities.OrgStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .IsConcurrencyToken()
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2");

                    b.Property<string>("Group")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("MailDatabaseGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsConcurrencyToken()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ModifiedOn")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2");

                    b.Property<string>("OrgUnit")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("varchar(800)");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MailDatabaseGroupId");

                    b.HasIndex("SectionId");

                    b.ToTable("OrgStructures", "dbo");
                });

            modelBuilder.Entity("ProvinciaNET.SelfManagement.Core.Entities.AdUserAccount", b =>
                {
                    b.HasOne("ProvinciaNET.SelfManagement.Core.Entities.OrgLocation", "Location")
                        .WithMany("AdUserAccounts")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProvinciaNET.SelfManagement.Core.Entities.OrgMembership", "Membership")
                        .WithMany("AdUserAccounts")
                        .HasForeignKey("MembershipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Membership");
                });

            modelBuilder.Entity("ProvinciaNET.SelfManagement.Core.Entities.AdUserAccountProvision", b =>
                {
                    b.HasOne("ProvinciaNET.SelfManagement.Core.Entities.AdUserAccount", "AdUserAccount")
                        .WithMany("AdUserAccountProvisions")
                        .HasForeignKey("AdUserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdUserAccount");
                });

            modelBuilder.Entity("ProvinciaNET.SelfManagement.Core.Entities.OrgMembership", b =>
                {
                    b.HasOne("ProvinciaNET.SelfManagement.Core.Entities.OrgStructure", "Structure")
                        .WithMany("Memberships")
                        .HasForeignKey("StructureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Structure");
                });

            modelBuilder.Entity("ProvinciaNET.SelfManagement.Core.Entities.OrgSection", b =>
                {
                    b.HasOne("ProvinciaNET.SelfManagement.Core.Entities.OrgCostCenter", "CostCenter")
                        .WithMany("Sections")
                        .HasForeignKey("CostCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProvinciaNET.SelfManagement.Core.Entities.OrgDirection", "Direction")
                        .WithMany("Sections")
                        .HasForeignKey("DirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostCenter");

                    b.Navigation("Direction");
                });

            modelBuilder.Entity("ProvinciaNET.SelfManagement.Core.Entities.OrgStructure", b =>
                {
                    b.HasOne("ProvinciaNET.SelfManagement.Core.Entities.OrgMailDatabaseGroup", "MailDatabaseGroup")
                        .WithMany("Structures")
                        .HasForeignKey("MailDatabaseGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProvinciaNET.SelfManagement.Core.Entities.OrgSection", "Section")
                        .WithMany("Structures")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MailDatabaseGroup");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("ProvinciaNET.SelfManagement.Core.Entities.AdUserAccount", b =>
                {
                    b.Navigation("AdUserAccountProvisions");
                });

            modelBuilder.Entity("ProvinciaNET.SelfManagement.Core.Entities.OrgCostCenter", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("ProvinciaNET.SelfManagement.Core.Entities.OrgDirection", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("ProvinciaNET.SelfManagement.Core.Entities.OrgLocation", b =>
                {
                    b.Navigation("AdUserAccounts");
                });

            modelBuilder.Entity("ProvinciaNET.SelfManagement.Core.Entities.OrgMailDatabaseGroup", b =>
                {
                    b.Navigation("Structures");
                });

            modelBuilder.Entity("ProvinciaNET.SelfManagement.Core.Entities.OrgMembership", b =>
                {
                    b.Navigation("AdUserAccounts");
                });

            modelBuilder.Entity("ProvinciaNET.SelfManagement.Core.Entities.OrgSection", b =>
                {
                    b.Navigation("Structures");
                });

            modelBuilder.Entity("ProvinciaNET.SelfManagement.Core.Entities.OrgStructure", b =>
                {
                    b.Navigation("Memberships");
                });
#pragma warning restore 612, 618
        }
    }
}
